openapi: 3.0.4

info:
  title: Netevent
  description: Application for online communication before meeting at events
  version: 1.0.0
  
servers:
  - url: http://localhost:80/api/v1
    description: local

tags:
  - name: users
    description: Operations about users
  - name: user
    description: Operations about the authenticated user
  - name: auth
    description: Operations about authentication
  - name: events
    description: Operations about events
    
paths:
  /users:
    post:
      tags:
        - users
      summary: Create a new user
      description: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              properties:
                login:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                role:
                  type: string
                interests:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        '201':
          description: Created
        '400':
          description: Invalid input
    get:
      tags:
        - users
      summary: List users
      description: List users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        '401':
          description: Unauthorized
        '404':
          description: Not found
          
  /users/{user_id}:
    get:
      tags:
        - users
      summary: Get a user
      description: Get a user
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /user:
    get:
      tags:
        - user
      summary: Get the authenticated user`s account
      description: Get the authenticated user`s account
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        '401':
          description: Unauthorized
          
    patch: 
      tags:
        - user
      summary: Updates one or more fields in the user structure
      description: Updates one or more fields in the user structure
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                login:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                role:
                  type: string
                interests:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
          
    delete:
      tags:
        - user
      summary: Delete the authenticated user`s account
      description: Delete the authenticated user`s account
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
              
  /auth/login:
    post:
      tags:
        - auth
      summary: Log the user into the system
      description: Log the user into the system
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '400':
          description: Invalid input
    
  /auth/logout:
    post:
      tags:
        - auth
      summary: Log the user out the system
      description: Log the user out the system
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not found
          
  /auth/refresh-tokens:
    post:
      tags:
        - auth
      summary: Refresh the token pair
      description: Refresh the token pair
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
        '401':
          description: Unauthorized
          
  /user/registrations:
    get:
      tags:
        - user
      summary: Get the authenticated user`s registrations
      description: Get the authenticated user`s registrations
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties: 
                  registrations:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /events:
    post:
      tags:
        - events
      summary: Create a new event
      description: Create a new event passed in the request body and returns an identificator
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                description:
                  type: string
                time:
                  type: string
                place:
                  type: string
                interests:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                properties:
                  event_id:
                    type: integer
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
    get:
      tags:
        - events
      summary: List events
      description: List all events if no creator_id passed. Otherwise lists all the creator`s events
      parameters:
        - name: creator_id
          in: query
          description: ID for creator
          required: false
          schema:
            type: integer
            format: int64
        - name: interests
          in: query
          description: Interest for event
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  events:
                    type: array
                    items:
                      $ref: "#/components/schemas/Event"
        '404':
          description: Not found
          
  /events/{event_id}:
    get:
      tags:
        - events
      summary: Read the event
      description: Read the event data
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        '404':
          description: Not found

    delete:
      tags:
        - events
      summary: Delete the event
      description: Permanently deletes the event
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        

    patch:
      tags:
        - events
      summary: Update the event
      description: Update one or more fields in the event structure
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                description:
                  type: string
                time:
                  type: string
                place:
                  type: string
                interests:
                  type: array
                  items:
                    type: string
        required: false
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          
  /events/{event_id}/chat_status:
    put:
      tags:
        - events
      summary: Сhange user status when ready to communicate
      description: Change user status when ready to communicate or not by the boolean flag in the request body
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ready_to_chat:
                  type: boolean
        required: true
      responses:
        '200':
          description: OK
        '404':
          description: Not found
        '401':
          description: Unauthorized

  /events/{event_id}/participants:
    get:
      tags:
        - events
      summary: List all the event`s participants
      description: List all the event`s participants
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: ready_to_chat
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not found
      
  /events/{event_id}/registrations:
    post:
      tags:
        - events
      summary: Register the authenticated user for an event
      description: Register the authenticated user for an event
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '409':
          description: Conflict
          
    delete:
      tags:
        - events
      summary: Delete the authenticated user`s registration on the event
      description: Delete the authenticated user`s registration on the event
      security:
        - bearerAuth: []
      parameters:
        - name: event_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not found
            
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      properties:
        id:
          type: integer
        login:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
        interests:
          type: array
          items:
            type: string
        created_at:
          type: string
        last_visited:
          type: string
    Event:
      properties:
        id:
          type: integer
        creator_id:
          type: integer
        title:
          type: string
        description:
          type: string
        time:
          type: string
        place:
          type: string
        interests:
          type: array
          items:
            type: string