image: golang:alpine

stages:
  - build
  - test
  - check_coverage

variables:
  EVENTDIR: event_service

build-job:
  stage: build
  script:
    - cd $EVENTDIR
    - go build -o bin/event cmd/main/main.go

test-job:
  stage: test
  script:
    - cd $EVENTDIR
    - go test ./... -coverprofile=events_coverage.out
  artifacts:
    paths:
      - events_coverage.out
    expire_in: 1 hour

check_coverage:
  stage: check_coverage
  script:
    - |
      COVERAGE=$(go tool cover -func=events_coverage.out | grep total | awk '{print $3}' | sed 's/%//')
      echo "Coverage: $COVERAGE%"
      if [ "$COVERAGE" -lt 30 ]; then
        echo "Coverage is below 30%, failing the pipeline"
        exit 1
      fi
  dependencies:
    - test-job
